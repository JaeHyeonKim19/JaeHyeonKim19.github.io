{"componentChunkName":"component---src-templates-post-template-jsx","path":"/codingtest/leetcode-add-two-numbers/2020-12-09 09:00:00 +0900","result":{"pageContext":{"html":"<h2>문제</h2>\n<p><a href=\"https://leetcode.com/problems/add-two-numbers/\">LeetCode - Add Two Numbers</a></p>\n<h2>풀이</h2>\n<p>음수가 아닌 정수를 나타내는 비어있지 않은 2개의 연결 리스트가 주어져있다. 각 정수는 역순으로 들어있고 한 자리 숫자를 포함하고 있다. 두 숫자의 합을 링크드 리스트로 리턴해야한다.</p>\n<p>특별히 어려운 사항은 없다. 유의해야할 부분은 다음 노드가 있는지(null 체크) 확인해야하고 carry 유뮤를 확인해줘야 한다는 것이다.</p>\n<p>첫 번째 노드가 1의 자리 숫자를 나타내기 때문에 첫 번째 노드부터 차례대로 더해주면 된다. 두 번째 노드부터는 각 숫자의 두 번째 노드 합 + 이전 자리 숫자의 carry로 계산해줘야한다.</p>\n<h2>코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">ListNode</span> <span class=\"token function\">addTwoNumbers</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ListNode</span> l1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ListNode</span> l2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">ListNode</span> answer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ListNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>l1<span class=\"token punctuation\">.</span>val <span class=\"token operator\">+</span> l2<span class=\"token punctuation\">.</span>val<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">ListNode</span> currentAnswerNode <span class=\"token operator\">=</span> answer<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> carry <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>l1<span class=\"token punctuation\">.</span>val <span class=\"token operator\">+</span> l2<span class=\"token punctuation\">.</span>val<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">10</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">ListNode</span> currentL1Node <span class=\"token operator\">=</span> l1<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">ListNode</span> currentL2Node <span class=\"token operator\">=</span> l2<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>currentL1Node <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> currentL2Node <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">int</span> l1Val <span class=\"token operator\">=</span> currentL1Node <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> currentL1Node<span class=\"token punctuation\">.</span>val <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">int</span> l2Val <span class=\"token operator\">=</span> currentL2Node <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> currentL2Node<span class=\"token punctuation\">.</span>val <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> carry <span class=\"token operator\">+</span> l1Val <span class=\"token operator\">+</span> l2Val<span class=\"token punctuation\">;</span>\n      currentAnswerNode<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ListNode</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      currentAnswerNode <span class=\"token operator\">=</span> currentAnswerNode<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span>\n      carry <span class=\"token operator\">=</span> result <span class=\"token operator\">/</span> <span class=\"token number\">10</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n      currentL1Node <span class=\"token operator\">=</span> currentL1Node <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> currentL1Node<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span>\n      currentL2Node <span class=\"token operator\">=</span> currentL2Node <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> currentL2Node<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>carry <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      currentAnswerNode<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ListNode</span><span class=\"token punctuation\">(</span>carry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","title":"[자바]LeetCode - Add Two Numbers","date":"2020-12-09"}}}